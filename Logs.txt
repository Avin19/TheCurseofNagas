--------------------------------------------------------------------------------------------------------
                                                01 JULY, 2025
--------------------------------------------------------------------------------------------------------
- Creating a separate scene for character mechanics testing

- Scene
    [=] MainMenu_CharacterMechanic
        {+} Adding 3D colliders to Ground and Player

- Scripts
    [=] Player.cs
        {+} 
    [=] MainGameplayManager
        {+} Central Singleton script to manage GameStatus
        {+} Trying SDF to check for objective visibility | It will not work due to perspective

--------------------------------------------------------------------------------------------------------
                                                02 JULY, 2025
--------------------------------------------------------------------------------------------------------
- Scripts
    [=] MainGameplayManager
        {+} Using camera to check object visibility.
        {+} Internal class for storing objective infos
        {+} Separate array for inactive and active objectives
        {+} Returning PlayerStatus via action for visible objects.
    [=] Player
        {+} ObjectiveVisible callback
    [=] UniversalConstant
        {+} Changing enum Objective to ObjectiveType and adding values
        {+} Adding PlayerStatus enum

- Scripts
    [=] EnemyBaseController
        {+} Basic enemy script for controlling Enemy
        {+} Enum to check Enemy Status
    [=] UniversalConstant
        {+} Adding GameStatus enum
    [=] MainGameplayManager
        {+} set/get logic for GameStatus flag
- Scene
    [=] Making a basic enemy object

- Scene
    [=] Making colliders orthogonal to ground
        {+} https://www.youtube.com/watch?v=2L7T2ujrXRQ&list=PPSV
        {+} https://www.youtube.com/watch?v=wYulZiBKg-I&list=PPSV

- Scene
    [=] Making Weapon prefab

- Scene
    [=] Adding Weapon-Collider as trigger to detect collision
- Scripts
    [=] UniversalConstant
        {+} Adding FACING_LEFT, FACING_RIGHT to PlayerStatus
    [=] Player
        {+} Facing left/right logic

- Scritps
    [=] Player
        {+} Fixing facing left/right

--------------------------------------------------------------------------------------------------------
                                                03 JULY, 2025
--------------------------------------------------------------------------------------------------------
- Project
    [=] PlayerController
        {+} Adding Jump | Roll | Attack | Interact
- Scripts
    [=] UniversalConstant
        {+} Adding InputStatus enum
        {+} Adding values to PlayerStatus enum

- Scripts
    [=] UniversalConstant
        {+} Removing InputStatus | Having separate enums will make it redundant
    [=] GameInput
        {+} Other input logic
        {+} Action for Input values
    [=] Player
        {+} OnInputDone callback
            <~> Setting PlayerStatus flags

- Scene
    [=] Adding a player template animations | Idle | Roll
- Scripts
    [=] Player
        {+} Animator reference
        {+} Animation logic | Template animations
        {+} Setting / Unsetting action
        {+} Attack collision logic
    [=] UniversalConstant
        {+} Adding ENEMY_FOUND to PlayerStatus
    [=] EnemyBaseController
        {+} Damage logic

--------------------------------------------------------------------------------------------------------
                                                04 JULY, 2025
--------------------------------------------------------------------------------------------------------
- Scripts
    [=] Player
        {+} Adding struct HitInfo and enum HitStatus
        {+} Keeping a list of HitInfo to check which collider was hit
        {+} OnTriggerEnter and OnTriggerExit for checking contacts with the collider
    [=] MainGameplayManager
        {+} Adding action for EnemyHit
    [=] EnemyBaseController
        {+} OnEnemyHit callback logic

- Scripts
    [=] UniversalConstant
        {+} Moving EnemeyStatus here and adding values
    [=] MainGameplayManager
        {+} Adding EnemyStatus to action OnEnemyStatusUpdate
    [=] EnemyBaseController
        {+} Changing callbacks to OnEnemyStatusUpdate
            <~> Invoking action for death
    [=] Player
        {+} Callback logic for OnEnemyStatusUpdate
            <~> Removing transform ID for dead enemy

- Scripts
    [=] EnemyBaseController
        {+} Refactoring to store hit logic here
    [=] Player
        {+} Sending simple hit action invoke along with transform ID
    [=] UniversalConstant
        {+} Adding value to EnemyStatus

- Scripts
    [=] Player
        {+} Fixing UnsetAction
    [=] Enemy
        {+} Adding Enemy Animator
            <~> Making template animations
        {+} Fixing Player detection logic
        {+} Enemy animation logic

- Scripts
    [=] EnemyBaseController
        {+} 
    [=] UniversalConstant
        {+} Adding INVESTIGATE_AREA to EnemyStatus

--------------------------------------------------------------------------------------------------------
                                                07 JULY, 2025
--------------------------------------------------------------------------------------------------------
- Updating all the scripts

- Scripts
    [=] PlayerAnimationController
        {+} Making this non-monobehaviour copy of PlayerAnimation
        {+} Moving Animation logic here from Player
    [=] Player
        {+} Integrating PlayerAnimationController
        {+} Commenting weapon placement as rotating the player now
- Scene
    [=] Changing enemy's proximity threshold
    [=] New prefab/animator for making changes

--------------------------------------------------------------------------------------------------------
                                                08 JULY, 2025
--------------------------------------------------------------------------------------------------------
- Scripts
    [=] UniversalConstant
        {+} Adding values to GameStatus enum
    [=] MainGameplayManager
        {+} Adding OnGameStatusChange action
    [=] EnvironmentGenerator
        {+} Adding prefab field for objects | Might later move to prefab pooling
        {+} Adding enums for Environment Types

--------------------------------------------------------------------------------------------------------
                                                09 JULY, 2025
--------------------------------------------------------------------------------------------------------
- Environment Generation

- Environment Generation Debugging Continue

- Environment Generation Fixing 1

- Scripts
    [=] EnvironmentGenerator
        {+} Environment Generation Fixing
        {+} Checking for the whole neighbouring radius instead of just 1 block in every direction

- Scripts
    [=] PerlinNoiseGenerator
        {+} Separate script for PerlinNoise

--------------------------------------------------------------------------------------------------------
                                                10 JULY, 2025
--------------------------------------------------------------------------------------------------------
- Scripts
    [=] EnvironmentGenerator
        {+} Adding radius check for spawning out the circle of POI
        {+} Starting spawning from one corner
        {+} Replacing x with y for index calculation

- Scripts
    [=] EnvironmentData.json
        {+} File to contain data about environment objects

- Scripts
    [=] EnvironmentGenerator
        {+} Bush generation on top of existing grid of trees in-between
        {+} LayerData struct to contain layer data
        {+} Not checking squared distance, instead simply setting withinDistance to true if within cell radius/range
            <~> For small range, upto 50, the results are almost identical

- Scripts
    [=] EnvironmentGenerator
        {+} During Radius check, checking also if the neighbour cell does not contain the same object being placed
        {+} Adding field for random cluster spawn of objects
            <~> Cluster cell with 1-cell boundary

--------------------------------------------------------------------------------------------------------
                                                11 JULY, 2025
--------------------------------------------------------------------------------------------------------
- Scripts
    [=] EnvironmentGenerator
        {+} Generating environment from grid data
        {+} Offsetting grid according to point-of-interest position
- Project
    [=] Changing Sorting Layer of environment prefabs

--------------------------------------------------------------------------------------------------------
                                                14 JULY, 2025
--------------------------------------------------------------------------------------------------------
- Scripts
    [=] EnvironmentGenerator
        {+} Randomisng object types to be placed
        {+} Adding parent transforms for holding objects
        {+} Adding subgrid logic
        {+} Integrating PoissonDiscSampler
    [=] PoissonDiscSampler
        {+} Separating PoissonDiscSampler logic to here

- Scripts
    [=] EnvironmentGenerator
        {+} Additional dividing of layers through samples
    [=] PoissonDiscSampler
        {+} Localizing samples to given start-index instead of middle of the grid
        {+} Fixing logic

--------------------------------------------------------------------------------------------------------
                                                15 JULY, 2025
--------------------------------------------------------------------------------------------------------
- Scripts
    [=] PoissonDiscSampler
        {+} Rounding instead of Flooring Random-Vector
        {+} Bounds Check fix for sub-layers as well as odd Sub-Layer rows/columns
    [=] TestPoissonSampler
        {+} Test script for checking PoissonSampler working

- Scripts
    [=] EnvironmentGenerator
        {+} Enabling Random-Cluster-Spawn
    [=] TestPoissonSampler
        {+} Lower kAttempts are good for cluster-spawn
    [=] PoissonDiscSampler
        {+} Taking subRows/subCols as radius and not total rows/cols for sub-layers
        {+} Using randomRadius instead of cellRadius for checking neighbours for Sub-Layers

- Scripts
    [=] EnvironmentGenerator
        {+} Adding sub-layer info to LayerData stuct and using it for sub-layer samples
    [=] PoissonDiscSampler
        {+} Adding currentVec to keep track of current point for sub-layers
        {+} Doing poiRadius check for sub-layers also
        {+} Setting Random at time of creation or updating-values, not everytime

- Scripts
    [=] EnvironmentGenerator
        {+} Covering the whole area except the POI
        {+} Adding poi transform/radius to LayerData
--------------------------------------------------------------------------------------------------------
                                                16 JULY, 2025
--------------------------------------------------------------------------------------------------------
- Scripts
    [=] PoissonDiscSampler
        {+} Chaning MidPoint according to localized or full-grid spawn
        {+} Random index to start from the last-row/last-column
    [=] EnvironmentGenerator
        {+} Moving sub-rows/sub-columns for poi to local fields

- Scripts
    [=] EnvironmentGenerator
        {+} Separating POI data from layer data
        {+} Iterating over every POI and instantiating every layer | Also doing this for sub-layers
        {+} Adding flag to check which layer has been set to create sub-layer respectively
            <~> Changing to if-else from switch due to flags
        {+} Adding bool to skip layer in LayerData struct
    [=] PoissonDiscSampler
        {+} Replacing randomOffset with midIndex
            <~> Using this for sub-layer creation for random cluster spawn

- Scripts
    [=] EnvironmentGenerator
        {+} Adding Sub-Layer Spawned values in LayerType
        {+} Updating grid values to Sub-Layer spawned values respectively
        {+} Constants/Logic for spawning rest of the area and sub-layers also
        {+} Object creation name/parent refactor
    [=] PoissonDiscSampler
        {+} Using mid-point of map as starting index for non-localized spawning

--------------------------------------------------------------------------------------------------------
                                                17 JULY, 2025
--------------------------------------------------------------------------------------------------------
- Making fog shader

--------------------------------------------------------------------------------------------------------
                                                18 JULY, 2025
--------------------------------------------------------------------------------------------------------
- Adjusting Fog Shader
- Making a cut-off shader for Foreground-fog

- Scripts
    [=] UniversalConstant
        {+} Adding values to PlayerStatus enum
        {+} Adding Layer and TriggeredEvent enum
    [=] MainGameplayManager
        {+} Adding action for player entering triggers
    [=] Player
        {+} using Layer for more checks in OnTriggerEnter
    [=] GameplayEventManager
        {+} internal InvokableEventsData and HiddenObjectsData to contain trigger tansforms, events and hidden objects
        {+} Array of both internal classes
        {+} OnPlayerEnterTrigger callback | Make object descend logic
- Scene
    [=] Player_K prefab
        {+} Adding Rigidbody to Player
        {+} Changing Player Collider layer to Player
- Adding tags: Interactables | Triggers

- Scripts
    [=] GameplayEventManager
        {+} Adding HiddenObjectsStatus enum and adding to HiddenObjectsData
        {+} Making object shake sideways along with descending
        {+} Make object rotate logic
        
--------------------------------------------------------------------------------------------------------
                                                21 JULY, 2025
--------------------------------------------------------------------------------------------------------
- For now, keeping Interactables as a separate gameobject
- Scripts
    [=] UniversalConstant
        {+} Adding InteractionType enum | Adding more values
        {+} Moving PlayerStatus values to InteractionType enum
    [=] MainGameplayManager
        {+} Renaming OnPlayerEnterTrigger to OnPlayerInteraction
    [=] Player
        {+} Interaction logic
            <~> Field for storing current interaction status
            <~> Using OnTriggerEnter for interaction for now
        {+} Storing Current Interactable Object when detected and calling for interaction with User-Input
    [=] NPCBaseController
        {+} Template script | Inheriting IInteractable
    [=] IInteractable
        {+} Interface for interactable objects
- Scene
    [=] Adding a test NPC

- Project
    [=] Refactor files to include namespaces

- Scene
    [=] Adding test canvas for Demo
- Scripts
    [=] Moving UIManager to MainMenu
    [=] MainGameplayUIManager
        {+} Separate script for controlling UI for main gameplay
        {+} OnPlayerInteraction callback to show prompt

- Scritps
    [=] NPCManager
        {+} Manager to spawn and control NPC's
    [=] NPCDialogue.json
        {+} Json to contain NPC dialogues

- Scripts
    [=] SaveSystem
        {+} Basic save system

--------------------------------------------------------------------------------------------------------
                                                22 JULY, 2025
--------------------------------------------------------------------------------------------------------
- Scripts
    [=] MainGameplayManager
        {+} Testing save-system
    [=] SaveSystem
        {+} Default contructor
        {+} fields for playerState and worldState
        {+} Callbacks for Save/Load operations
    [=] UniversalConstant
        {+} Adding SaveStatus enum

- Behaviour Tree Tests
- Youtube implementation is wrong

--------------------------------------------------------------------------------------------------------
                                                23 JULY, 2025
--------------------------------------------------------------------------------------------------------
- Scripts
    [=] Chaning namespace from TestBehaviourTree to BehaviourTree
    [=] Selector/Sequence
        {+} Changing List to arrays
- Project
    [=] Moving BT scripts

- Scripts
    [=] ChaseTargetTask
        {+} Move towards target with speed mult
        {+} Status: RUNNING/SUCCESS
    [=] CheckRangeSquared - Check Target distance square from self
        {+} Check distance aquare from target
        {+} Status: RUNNING/SUCCESS
    [=] PatrolAreaTask - Patrol Area Node
        {+} Move between different target points With speed mult
        {+} Wait at points for fixed interval of time
        {+} Status: RUNNING/SUCCESS

- Scripts
    [=] UniversalConstant
        {+} Adding LOST_PLayer to EnemyStatus enum
    [=] CheckRangeSquared
        {+} Returning FAILURE when not found
    [=] CheckPlayerRange
        {+} Extension of CheckRangeSquared for setting EnemyStatus
    [=] CheckIfLostPlayer
        {+} Toggle Enemy Status according to Player visibility
    [=] InvestigateAreaTask
        {+} Check if enemy has lost Player
        {+} Create a search radius and choose a random direction to go withing the radius
        {+} Do this until the totalSearch time is over

--------------------------------------------------------------------------------------------------------
                                                24 JULY, 2025
--------------------------------------------------------------------------------------------------------
- Scripts
    [=] Defining TESTING_BT preprocessor
    [=] InvestigateAreaTask
        {+} Completing logic | Setting/Unsetting flags
    [=] StayAndLookAround
        {+} Basic logic | Setting/Unsetting flags
    [=] PatrolAreaTask
        {+} Fixing Bugs | References to fields/values for them
    [=] EnemyBoard
        {+} Blackboard class to keep track of Enemy
    [=] Changing all Behaviour-Nodes EnemyStatus to EnemyBoard
- Project
    [=] Test mats for BT tests

- Project
    [=] Moving BehaviourNode scripts to Enemies

- Scripts
    [=] ChaseTargetTask
        {+} Adding EnemyBoard | Test Conditions
        {+} Fixing Stopping logic
    [=] CheckIfLostPlayer
        {+} Adding Test Conditions
    [=] InvestigateAreaTask
        {+} Adding Test Conditions
        {+} Fixing random search position logic
            <~> Resetting start pos for every random search pos
            <~> Reset currDuration after FAILURE
    [=] StayAndLookAround
        {+} Adding Test Conditions

- Scripts
    [=] Inverter
        {+} Fixing script
    [=] CheckPlayerInAttackRange
        {+} Adding Test Conditions | Flags

- Scripts
    [=] UniversalConstant
        {+} Adding EnemyAttackType for selecting enemy attacks
        {+} Fixing EnemyStatus values
    [=] DecideAttackTypeTask
        {+} Basic Logic | Test Conditions
    [=] EnemyBoard
        {+} Adding EnemyAttackType as field
    [=] TestEnemyController
        {+} Inverting DecideAttackTypeTask to let the next Node work as it is under a Selector

--------------------------------------------------------------------------------------------------------
                                                25 JULY, 2025
--------------------------------------------------------------------------------------------------------
- Scripts
    [=] PerformAttackTask
        {+} Basic attack script
    [=] UniversalConstant
        {+} Removing RANGED_ATTACK values as it does not makes sense, only keeping 1
        {+} Adding Heavy Melee Attack values to AttackType enum
        {+} Making AttackType to work as flags
- Project
    [=] AttackComboData.json
        {+} Will contain all the attack combos/patterns

- Scripts
    [=] FileDataHelper
        {+} Utility script for loading files from StreamingAssets path
    [=] AttackTemplate
        {+} Template for holding AttackData json
        {+} Changing from porperties to fields
        {+} Adding constructor to each class
        {+} Adding ComboSequence to parse the sequence and load to here
    [=] AttackDataParser
        {+} For loading and parsing AttackData
        {+} Constants for Comparing Combo string
    [=] UniversalConstant
        {+} Changing AttackType back to normal values and renaming values
    [=] EnemyBoard
        {+} Addin AttackTypeBase to identify the base type of attack
    [=] DecideAttackTypeTask/PerformAttackTask
        {+} Setting/Comparing AttackTypeBase instead
- Project
    [=] Changing StreamingAssets folder location

--------------------------------------------------------------------------------------------------------
                                                28 JULY, 2025
--------------------------------------------------------------------------------------------------------
- Updated BT diagram
- Scripts
    [=] UniversalConstant
        {+} Adding EnemyType enum to identify Enemy
        {+} Adding values to EnemeyStatus
    [=] DecideAttackTypeTask
        {+} Also deciding the melee-combo to perform
    [=] EnemyBoard
        {+} Adding MeleeCombo field for storing combo references
        {+} Adding SelectedComboIndex to track the combo selected
        {+} Adding CurrentAttackIndex to keep track of the attack index in the combo
    [=] PerformAttackTask
        {+} Attack logic template

- Scripts
    [=] EnemyBoard
        {+} Adding Animator
        {+} Constants for animation flags
        {+} AnimClipLengths array ref for animation clips length
    [=] PerformAttackTask
        {+} Invoke animation / Change animation after delay
        {+} Checking if any animation is currently playing
- Project
    [=] Test animations for Enemy

- Scripts
    [=] EnemyBoard
        {+} Shifting animation constant here from PerformAttackTask | Adding another const
        {+} Changing const to flags
    [=] PerformAttackTask
        {+} Repeatedly async checking if animation has finished playing instead of setting flags directly
- Project
    [=] Adding event to animation-clips to trigger AnimationClipFinished
    [=] Adding some extra test animation-clips

--------------------------------------------------------------------------------------------------------
                                                29 JULY, 2025
--------------------------------------------------------------------------------------------------------
- Scripts
    [=] DecideAttackTypeTask | MakeCombatDecisionTask
        {+} Renaming to MakeCombatDecisionTask
        {+} Making logic flow
        {+} Random wait function
    [=] EnemyBoard
        {+} Renaming SelectedComboIndex to SelectedCombo
        {+} Adding SelectedCombatDecision
    [=] PerformAttackTask
        {+} Checking for CombatDecision and resetting flags
    [=] UniversalConstant
        {+} Adding CombatDecision enum
        {+} Removing ATTACK_DECIDED from EnemyAttackType
- Project
    [=] Testing animations

- Scripts
    [=] Adding scripts PerformDefendTask | PerformStrafeTask
        {+} Basic functionality template
        {+} Setting NodeState to IDLE at exit
    [=] EnemyBoard
        {+} Renaming CurrentAttackIndex to CurrentDecisionIndex
        {+} Adding const NO_DECISION
- Updating BT diagram

- Scripts
    [=] EnemyBoard
        {+} Adding const COMBAT_DECISION for animation
    [=] PerformStrafeTask
        {+} Strafe around the player in a circle with defined radius
        {+} Adding strafe mechanics | Radius, speed, time - min/max
        {+} Fixing logic | Direction Change randomly
- Project
    [=] Adding test animation parameter to Enemy AC

- Project
    [=] Adding Rigibody/Colliders to Test Enemy
    [=] Changing Collision Layers
- Scripts
    [=] TestEnemyController
        {+} Update WeaponCollider position wrt Player when attacking
        {+} Adding const Player Layer, Collider Offset
        {+} Chaning Enemy Status through animation events
        {+} OnTriggerEnter/Exit logic for setting flag | Player detection
        {+} Base attack logic 
    [=] Updating InvestigateAreaTask / StayAndLookAroundTask
    [=] UniversalConstant
        {+} Removing ATTACKING from EnemyStatus
        {+} Adding ATTACK_AT_HIT_POINT / PLAYER_WITHIN_RANGE to EnemyStatus
        {+} Adding AnimationClipStatus enum
--------------------------------------------------------------------------------------------------------
                                                30 JULY, 2025
--------------------------------------------------------------------------------------------------------
- Project
    [=] Making test animations for Enemy
        {+} Adding CombatDecision parameter and connecting to transitions
    [=] Adding bones to Skeleton sprite

- Testing Random Enemy Combat Decisions
- Scripts
    [=] PerformAttackTask
        {+} Setting COMBAT_DECISION for animator
    [=] PerformStrafeTask
        {+} Separating multipliers for strafe speed and dir speed
        {+} Going towards the point direciton instead of assigning the position directly
    [=] PerformAttackTask / PerformDefendTask / PerformStrafeTask
        {+} Resetting flags properly
- Project
    [=] Making test Defend Animation for Enemy
    [=] Changing Skeleton ordering layers / object positions

--------------------------------------------------------------------------------------------------------
                                                31 JULY, 2025
--------------------------------------------------------------------------------------------------------
- Scripts
    [=] TestEnemyController
        {+} Make Enemy face the Player | Simply flipping Visuals for now
    [=] MakeCombatDecisionTask
        {+} Restting Flags for Wait decision
    [=] EntityInfo struct
        {+} Container to hold basic Enemy Info | Health/Damage
    [=] UniversalConstant
        {+} Adding HAVE_A_TARGET to EnemyStatus
    [=] IDamageable
        {+} Interface for all the damageable objects
- Project
    [=] File/Folder restructure
    [=] Making Enemy test animation changes

- Scripts
    [=] EnemyBT_Task scripts
        {+} Adding target validation for all
    [=] TestEnemyController
        {+} Remove target if its health has reached zero

- Scripts
    [=] EnemyBT_Task scripts
        {+} Checking flags for target validation
- Project
    [=] Fixing Event Invoke position in Enemy Animation

- Scripts
    [=] UniversalConstant
        {+} Adding BLOCKING_ATTACK to EnemyStatus
    [=] TestEnemyController
        {+} Adding IDamageable

- Project
    [=] Minimap_RT for rendering Minimap
    [=] TestMinimap scene
    [=] Adding Minimap/Ground Layer
    [=] Adding sprite on top of Enemy/Player for minimap
    [=] Making bg transperant for the mainCamOther
- Scripts
    [=] TestMinimapManager
        {+} Test script for Minimap

--------------------------------------------------------------------------------------------------------
                                                04 AUG, 2025
--------------------------------------------------------------------------------------------------------
- Project
    [=] Changing Minimap_RT Color Format | Width/Height
    [=] Adding Environment layer
- Scene
    [=] Test
        {+} Adding test trees
        {+} Adding Environment to LayerMask | Trees are static for now
- Scripts
    [=] TestMinimapManager
        {+} Keeping a private texture for storing overhead texture
        {+} Save Image from Texture logic
        {+} Using same camera to get overhead view of the whole map | Changing settings only

--------------------------------------------------------------------------------------------------------
                                                05 AUG, 2025
--------------------------------------------------------------------------------------------------------
- Scripts
    [=] TestMinimapManager
        {+} Minimap settings for Player
        {+} Displaying object position on the minimap
            <~> Offsetting player pos according to the size of the minimapRT

- Scripts
    [=] TestMinimapManager
        {+} Offsetting first and then scaling
        {+} Searching for eays to remove offset on minimap

- Scripts
    [=] TestMinimapManager
        {+} Fixing offset position
        {+} Storing original Bg Texture and replacing prev set pixels with original
        {+} Moving RenderCameraHelper to Update
        {+} Adding class TrackableEntity | Entity Position / Color / Prev Position
        {+} Array to contain multiple TrackableEntities
        {+} Logic for multiple TrackableEntities

    [=] PlayerTest
        {+} Test script for Player testing

- Scripts
    [=] SimpleEnemyTest
        {+} Test script for minimap tests

- Preparing for merges with main branch
- Scripts
    [=] MainGameplayManager
        {+} Adding MiniMapManager
    [=] MiniMapManager
        {+} Main Manager for mini-maps | removing test logic from TestMinimapManager
    [=] SaveSystem
        {+} Fixing
- Project
    [=] Adding MinimapSymbol on tree/Building prefabs
- Demo Scene
    [=] Adding MiniMap to Canvas
    [=] Adding ortho camera for Mini-Map
    [=] MAking Boundaries | Scaling Ground | Adding Layer tags | Changing Sorting Layer
    [=] [IMP] Ground sprite is not working properly with Render Texture
        <~> Maybe due to Multiple Sprite Mode
        <~> Using Mesh for Ground

--------------------------------------------------------------------------------------------------------
                                                06 AUG, 2025
--------------------------------------------------------------------------------------------------------
- Enemy Spawner
- Scripts
    [=] EnemySpawner
        {+} List of Enemy prefabs / Spawn points
        {+} Basic logic to spawn around a point
    [=] TestEnemySpawner
        {+} For testing EnemySpawner
- TestMinimap Scene
    [=] Using this scene to test EnemySpawner

- Scripts
    [=] EnemySpawner
        {+} Adding SpawnInterval to enemy spawn
    [=] MainGameplayManager
        {+} Integrating EnemySpawner here
- [IMP] Need to make dynamic selection of patrol points for enemies

- Scripts
    [=] AudioManager
        {+} Making this singleton for now
        {+} Basic Audio Manager implementation
        {+} Making enum SFXClip
        {+} String constants for exposed param of AudioMixers
    [=] AudioSettings
        {+} ScriptableObject to contain persisting audio settings between scenes
- Demo Scene
    [=] Adding AudioManager
        {+} Adding AudioSources for player, enemy, bgm
- Project
    [=] Making a Audio Mixer for Audio Sources and exposing parameters for control
    [=] Making a AudioSettings SO

- Project
    [=] Adding test sfx files
- Scripts
    [=] Player
        {+} Testing AudioManager
        {+} Adding CancellationTokenSource logic
        {+} Fixing Interaction bug | Checking if interaction is available
        {+} Fixing TriggerDetection
    [=] GameplayEventManager
        {+} Fixing RespondToPlayer
    [=] UniversalConstant
        {+} Adding "ACTIVATE_INTERACTION" to PlayerStatus

--------------------------------------------------------------------------------------------------------
                                                07 AUG, 2025
--------------------------------------------------------------------------------------------------------
- NPCDialogue.json
    [=] Renaming to Dialogues.json to contain all the dialogues
    [=] Chaning "npc_dialogues" to "all_dialogues" | "id" to "parent_id"
    [=] Adding list of objects "dialogue" to "dialogues_list"
        {+} "dialogue_flags" to check for conditions,
        {+} "dialogue"/"dialogue_id"/"dialogue_type" contains the Dialogue/ID/Type,
        {+} "next_dialogue_id" contains the next dialogue to show,
        {+} "choices" contains list of dialogue to choose from

- Scritps
    [=] UniversalConstant
        {+} Adding enum DialogueType
- Dialogues.json  
    [=] Adding choices template
    
- Project
    [=] Making a visual graph tool for dialogues

--------------------------------------------------------------------------------------------------------
                                                11 AUG, 2025
--------------------------------------------------------------------------------------------------------
- Project
    [=] Continue Dialogue Visual graph
    [=] Save/Load functionality
    [=] Changing file directories
    
- Script
    [=] Fixing Clear logic

--------------------------------------------------------------------------------------------------------
                                                12 AUG, 2025
--------------------------------------------------------------------------------------------------------
- Script
    [=] GraphSaveUtility
        {+} Fix resource folder creation

- Script
    [=] Removing DialogueNodeLinkData file and placing it under DialogueNodeData file

- Scripts
    [=] GraphSaveUtility / DialogueGraphEditor
        {+} Parsing Dialogues JSON
    [=] DialogueTemplate
        {+} Template to parse Dialogues.json
    [=] DialogueGraphView
        {+} Adding fields from Dialogues.json
- Dialogues.json
    [=] Refractoring values
- DialoguesTest.json
    [=] Test json

- Script
    [=] DialogueTemplate
        {+} Simplifying field names
    [=] DialogueNodeData / DialogueNode
        {+} Removing DialogueText
        {+} Removing EntryPoint
- Dialogues_Test.json / Dialogues.json
    [=] Simplifying key names

- Scripts
    [=] DialogueGraphEditor / DialogueGraphView / GraphSaveUtility
        {+} Replacing GUID with viewDataKey
        {+} Refactoring to remove DialogueNode
    [=] DialogueGraphView
        {+} Adding an ID field and changing the title of Node accordingly
        {+} Adding a DialogueData list to store values from Nodes
        {+} Attaching remove callback for Node

--------------------------------------------------------------------------------------------------------
                                                13 AUG, 2025
--------------------------------------------------------------------------------------------------------
- Scripts
    [=] DialogueNodeLinkData
        {+} Renaming to DialogueNodePortData
    [=] GraphSaveUtility
        {+} ClearGraph logic change
    [=] DialogueGraphView
        {+} Resetting DialogueData list
        {+} Fixing Node removal
        {+} Adding/Changing NodePort values logic
    [=] DialogueTemplate
        {+} Renaming DialogueLink to DialoguePort
            <~> Changing fields to base_uid/target_uid
            <~> Adding portName field
            <~> Replacing port with base_uid 
- Dialogues.json / Dialogues_Test.json
    [=] Renaming/Changing keys accordingly

- Scripts
    [=] GraphSaveUtility
        {+} Port generation fix
        {+} Connecting ports / Setting Node positions
    [=] DialogueTemplate
        {+} Adding position field to store Node positions
    [=] DialogueGraphView
        {+} Existing/New port validation
- Dialogues_Test.json
    [=] Adding positions

--------------------------------------------------------------------------------------------------------
                                                14 AUG, 2025
--------------------------------------------------------------------------------------------------------
- Taking leaf nodes separately will take too long or a roundabout approach
- Scripts
    [=] DialogueGraphView
        {+} 4 characters for the node viewDataKey 
        {+} Replacing nodeCount with AddedDialogues count

- Changing ID approach for DialogueNodes
- Scripts
    [=] DialogueTemplate
        {+} Adding/Fillin up Dictionary with characters as value and "parent_id" as key

- Changing ID structure
- Scripts
    [=] DialogueTemplate
        {+} Changing ids to int
    [=] GraphSaveUtility
        {+} Changing logic for ids | Fixing logic
    [=] DialogueGraphView
        {+} Changing logic for ids
        {+} Using 3 numbers as parent_id and base_uid
        {+} Removing TextField from Choice port
    [=] UniversalConstant
        {+} Adding NOT_SET constant
    
- Scripts
    [=] DialogueGraphEditor
        {+} Changing Clear Graph logic
    [=] DialogueGraphView
        {+} Using RemoveAt instead of null assignment
    [=] GraphSaveUtility
        {+} Fixing Save logic
        {+} Logic for adding Leaf Nodes
        {+} Saving position of Nodes
        {+} Creating backup of previous Json
    [=] DialogueTemplate
        {+} Extension methods | Vector2Serialized -> Vector2

--------------------------------------------------------------------------------------------------------
                                                15 AUG, 2025
--------------------------------------------------------------------------------------------------------
- Scripts
    [=] DialogueGraphEditor
        {+} Fix for node removal error on domain reload
        {+} Removing old Save/Load
    [=] UniversalConstant
        {+} Adding constants for JSON
    [=] GraphSaveUtility
        {+} Removing Old functions / Refactoring

- Testing loading/unloading Dialogues at runtime
- Scripts
    [=] DialogueManager
        {+} Basic JSON loading

- Scripts
    [=] IInteractable
        {+} Adding out variables to Interact()
    [=] NPCBaseController
        {+} Adding UID, NpcID, name fields
            <~> Using name to get the NpcID
        {+} Changing Interact logic
    [=] DialogueManager
        {+} Adding PlayerInteraction callbacks
        {+} Array/Logic to track Dialogue progress
    [=] MainGameplayManager
        {+} Sending additional ID with OnPlayerInteraction call
        {+} Adding OnShowDialogue action
    [=] Player
        {+} NPC Interaction logic
- TestDialogueSystem for testing DialogueSystem

- Scripts
    [=] TestDialogueSystemCanvas
        {+} Test script for canvas
    [=] TestDialogueMainManager
        {+} Test script for MainManager
    [=] PlayerTest
        {+} Adding Interactable test code
- Dialogues_SerializesTest.json
    [=] Filling dummy values for testing

--------------------------------------------------------------------------------------------------------
                                                18 AUG, 2025
--------------------------------------------------------------------------------------------------------
- Make Dialogue Selection buttons for selecting dialogues
- TestDialogueManager
    [=] Check for choices and invoke action to display them
- TestDialogueSystemCanvas
    [=] Show multiple choices logic
- Dialogues_SerializesTest.json
    [=] Adding Player test dialogues
    [=] Adding dialogues to Choice Nodes also

- Scripts
    [=] PlayerTest
        {+} Getting/Saving the interationUID from IInteractable
        {+} Sending Interaction Start/Finish Request to IInteractable
    [=] IInteractable
        {+} Adding UID to field
        {+} Returning InteractionType and removing UID from Interact()
    [=] UniversalConstant
        {+} Adding FINISHING_INTERACTION to InteractionType
    [=] NPCBaseController
        {+} Checking for InteractionType accordingly

- There will be duplicate Dialogue Nodes for now
- Scripts
    [=] TestDialogueManager
        {+} Adding fields to track Dialogue Nodes
        {+} Using charUID instead to access Dialogue List
    [=] PlayerTest
        {+} Removing fields to store IDs for dialogues
        {+} Invoking OnPlayerInteraction with respective ids for the first time only

- Script
    [=] TestDialogueManager
        {+} Storing targetIds and loading node IDs when callback made
        {+} Player dialogues will be at 0th in DialogueTracker
        {+} Extracting Target Dialogue Node from Player Choice Node
    [=] UniversalConstant
        {+} Adding enum to InteractionType
    [=] TestDialogueSystemCanvas
        {+} Dialogue Choice buttons callback added
    [=] TestDialogueManager
        {+} Send bool parameter for choices with OnShowDialogue
- Dialogues_SerializesTest.json
    [=] Adding additional Dialogues Nodes

- Scripts
    [=] TestDialogueManager
        {+} Separating dialogueData for Player Choice and normal Dialogues
        {+} Updating _charUID at the end so as to point to correct Character Dialogues
        {+} EOC logic
    [=] TestDialogueSystemCanvas
        {+} EOC logic

- Scripts
    [=] UniversalConstant
        {+} Adding END to DialogueType enum
    [=] TestDialogueManager
        {+} Shifting EOC logic to switch block
            <~> Setting DialogueTracker before ending conversation for the next Interaction
    [=] TestDialogueSystemCanvas
        {+} Removing commented code
- Dialogues_SerializesTest.json
    [=] Adding more Nodes and EOC Nodes

--------------------------------------------------------------------------------------------------------
                                                19 AUG, 2025
--------------------------------------------------------------------------------------------------------
- Making logic for Quest Conversation
- Scripts
    [=] TestDialogueManager
        {+} 
    [=] TestDialogueMainManager
        {+} Making a list to keep track of quests
    [=] DialogueTemplate
        {+} Adding QuestIndex to associate nodes with Quests
    [=] UniversalConstant
        {+} Adding QuestType enum
    [=] TestQuestManager
        {+} Tracking quests and quest progress here
        {+} Loading Json logic
    [=] QuestTemplate
        {+} Template classes to load the QuestData json
- Dialogues_SerializesTest.json 
    [=] Adding quest_type to nodes
- QuestData.json
    [=] Json to contain quests

--------------------------------------------------------------------------------------------------------
                                                20 AUG, 2025
--------------------------------------------------------------------------------------------------------
- Scripts 
    [=] TestQuestManager
        {+} List to keep track of active quests
    [=] TestDialogueMainManager
        {+} Adding callback for QuestSystem / UI update calls
        {+} Adding QuestSystem Functionality here
    [=] QuestTemplate
        {+} Moving QuestType here
        {+} Adding Questtype to Quest
    [=] TestQuestSystemCanvas
        {+} Test Canvas for QuestSystem
        {+} Updating quest rewards
    [=] UniversalConstant
        {+} Adding UpdateType enum
- QuestData.json
    [=] Adding more nodes with objectives

--------------------------------------------------------------------------------------------------------
- [DO] Convert story conditions from bool to flags
- [DO] Dialogues JSON
    [=] Remove nodeIndex
- [DO] Dialogue System
    [=] [DO] Process all the information parallely
    [=] [DO] Convert all the strings to some Number Equivalent or something fast
        {+} Integer should be Enough
- [DO] Enemis
    [=] [DO] Runtime patrol point selection
- [NOW] Enemy Combat logic
    [=] [DO] Shift to boxcast for detecting hit if possible
    [=] [DO] Defend mechanic
- [NOW] Behaviour Tree
    [=] [DO] Make StayAndLookAround logic
    [=] [DO] Make DecideAttackTypeTask abstract
- [DO] [IMP] Reset flags for the attack tree
- [DO] [IF POSSIBLE] Implement GOAP instead of Behaviour Tree
- [NOW PARTIAL] Save System
- [DO] Main Menu
- [DO] Dialogue with NPC logic
- [DONE FOR NOW] Collision/Triggers for buildings
- [DONE FOR NOW] Fog at the edge of the map
- [DONE FOR NOW] Basic combat, exploration, vision-triggered objectives
- [BASE] (180 x 180) Grid for the whole forest
- [DONE] FOR NOW Enivronment spawning around point of interest
    [=] Predefined point of interest
    [=] Environment generation around point of interest.
    [=] Spawn trees/bushes on the basis of pearl noise
    [=] [DO] Additonal spawning after trees
        {+} Can use the initial map to spawn grass  or something else in-between the trees
        {+} Would need more space between trees so as to fit bushes to look natural, or no?
            <~> Trees and bushes would look too much separated
        {+} Might need to overlap bushes, to some extent, not fully
            <~> Will need to clump bushes together, space between bushes look unnatural
        {+} Will there be grass everywhere?                                 -   Performance Issue
- [DO][IMP] NPC | ENEMY | PLAYER to have a common base class
- [DO] Can just pass the offset from which to start to the PoissonSampler
    [=] Normal indexing can be used to generate the grid from 0 to the last index of the localized grid
    [=] The offset can be used at last to add to the whole grid for the localized values
    [=] This way only 1 option remains instead of 2 just as now
- [FIX] WeaponPlacement for Player
    [=] Dedicated animation for left/right facing?
- [DO] Enemies
    [=] Will enemies respawn on the same place?
    [=] Pooled enemies?
    [=] Have wait time specific to the action being taken
    [=] Ref: GTA SA
        {+} A hostile NPC will come running up, slow down a bit ahead and start approaching in fighting stance
        {+} They do not directly attack the player.
        {+} After attacking the player, once or maybe with a combo
            <~> They will either stay at one place or try to rotate and get a different angle at the player
- [DO] Will need to tweak enemies that have ranged weapons
- [DO] Will there be i-frame for the whole roll
- [DO] Check how many actions can be stacked.
    [=] Maybe only 2 actions can be stacked on top.
    [=] Eg: Attack + Move, Use Item + Move
- Orientation does not seem to matter that much to when using weapon
    [=] https://www.youtube.com/watch?v=nRsneTFqdz0&list=PPSV&t=26s
    [=] 0:41 
        {+} Player can strike upward without rotating the sprite towards the target
        {+} The sprite is facing sideways and animation is happening while 
            the hit-box might be facing upwards and hitting the target
        {+} When hitting up or down, the sprite is rotated sideways.
            <~> Left or right might depend on something maybe
- [FIX] Find a way to make enemy not slide when IDLE and focusing on Camera
- [NOW] [DONE]Vision-Triggered objectives
    [=] Need to check if the obect is visible enough on the screen through the camera
    [=] Placing mutiple transforms around the objective to check which objective has been reached.
    [=] Basically a bounds check
        {+} Rigidbody?
            <~> Too costly, query every FixedUpdate unnecessarily
        {+} Position Check
            <~> This will also be called every Update
            <~> At least not as expensive as Physics Query
            <~> Who will trigger the event?
        {+} Using Camera

- Work on main menu:     Template only + logic
- 2d rigging for attack animations of player
- Work on colliders

- Poisson Radius Check | Simple
    [=] Async | Start: 1m 52s 533ms 638877709125334669 | End: 2m 0s 592ms 638877709205926455
    [=] Non-Async 50 | Start: 5m 54s 992ms 638877711549923489 | End: 5m 54s 995ms 638877711549953674       | 30,185

    [=] Non-Async 100 | Start: 11m 44s 532ms 638877715045328844 | End: 11m 44s 541ms 638877715045414116       | 30,185

- Poisson Radius Check | DistSqr
    [=] Async | Start: 3m 33s 696ms 638877710136965023 | End: 3m 41s 786ms 638877710217869093
    [=] Non-Async 50 | Start: 7m 13s 697ms 638877712336972752 | End: 7m 13s 699ms 638877712336997780       | 25,028

    [=] Non-Async 100 | Start: 10m 24s 506ms 638877714245066834 | End: 10m 24s 517ms 638877714245177378       | 25,028

-------------------------------------------------------------------------------------------------------------------------
                                                    COMBAT MODEL
-------------------------------------------------------------------------------------------------------------------------
- Chase the Player                                      - Basic
- Hit the Player                                        - Basic
- Decide which move to use on the Player                - Basic
- Get hit from the Player                               - Basic
- Defend from the Player
- Strafe around the Player
- Take Cover from the Player
- Throw things at the Player for doing Damage
- Use Melee-Weapons at the Player
- Use Ranged-Weapons at the Player
- Take surroundings into consideration
- Take their own condition into consideration
- When low Health, do something to increase health
    [=] Heal if Possible


-------------------------------------------------------------------------------------------------------------------------
- Some of these building will have triggers 
    [=] That will open up a room Or something
- I was thinking some building will have a collider that will make player to spawn in next area
    [=] If you see the sprite folder there some ground tiles
    [=] These will be place next to each other depending upon the collision player will spawn different ground
- Depending upon Building or npc
    [=] It will open a room or conversation dialogue

NEW TASKS
[x] 1.    Mini map
[x] 2.    Enemy spawner - >
[x] 2.    Behaviour tree for enemy ( attack , patrol , search ,idle )
[ ] 4.    Have you worked on shader graph - > if yes ,  depth shader graph , adding fireflies (VFX graph )
[x] 5.    audio manager
[ ] 6.    Cutsence , Timeline ( dependency on me ) 
[ ] 6.5   Instruction to play the game 
[-] 7.    Modular Dialog  system
[x] 8.    singleton for audio manager

-------------------------------------------------------------------------------------------------------------------------

[-] https://pixabay.com/sound-effects/walk-on-wood-73212/
[-] https://pixabay.com/sound-effects/footsteps-dirt-02-73773/
[-] https://pixabay.com/sound-effects/running-on-dirt-road-345729/
[-] https://pixabay.com/sound-effects/walking-in-water-199418/
[-] https://pixabay.com/sound-effects/metal-impact-247482/
[-] https://pixabay.com/sound-effects/metallic-clang-100473/
[-] https://pixabay.com/sound-effects/clean-fast-swooshaiff-14784/

- Dialogue References
    [=] https://yarnspinner.itch.io/yarn-spinner
    [=] https://www.reddit.com/r/howdidtheycodeit/comments/131pm2v/dialogue_system_implementations/
    [=] https://www.youtube.com/watch?v=iZUTOgQuekc&t=2s
    [=] https://www.youtube.com/watch?v=7KHGH0fPL84
    [=] https://www.youtube.com/watch?v=A7WXmbkIVRo